[{"D:\\Learning\\timelineproject\\src\\index.tsx":"1","D:\\Learning\\timelineproject\\src\\App.tsx":"2","D:\\Learning\\timelineproject\\src\\TimelineStage.tsx":"3","D:\\Learning\\timelineproject\\src\\TimelineProperty.tsx":"4","D:\\Learning\\timelineproject\\src\\Play.tsx":"5"},{"size":197,"mtime":1607173994349,"results":"6","hashOfConfig":"7"},{"size":2459,"mtime":1609792841466,"results":"8","hashOfConfig":"7"},{"size":13832,"mtime":1610285776757,"results":"9","hashOfConfig":"7"},{"size":6785,"mtime":1610305156980,"results":"10","hashOfConfig":"7"},{"size":1806,"mtime":1609704868004,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"12rsegs",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\Learning\\timelineproject\\src\\index.tsx",[],["24","25"],"D:\\Learning\\timelineproject\\src\\App.tsx",[],"D:\\Learning\\timelineproject\\src\\TimelineStage.tsx",[],"D:\\Learning\\timelineproject\\src\\TimelineProperty.tsx",["26","27","28","29"],"D:\\Learning\\timelineproject\\src\\Play.tsx",["30"],"/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\n\nlet test: any;\n\nconst Play = () =>\n{\n  const [count, setCount] = React.useState(0);\n  const [active, setActive] = React.useState(false);\n\n  React.useLayoutEffect(() =>\n  {\n    const currPosition: number = count;\n\n    if (active)\n    {\n      let handler: any;\n\n      const currTime = new Date().getTime();\n\n      const animate = (_: number, currTime: number, currPos: number) =>\n      {\n\n        const runtime = new Date().getTime() - currTime;\n        const progress = (runtime / 1000) * 1;\n        \n        console.log(currPosition)\n        setCount((prev) => currPosition + 200 * progress);\n\n        handler = requestAnimationFrame((timestamp) => animate(timestamp, currTime, currPos));\n      };\n\n      handler = requestAnimationFrame((timestamp) => animate(timestamp, currTime, currPosition));\n\n      return () => cancelAnimationFrame(handler)\n    }\n\n\n  }, [active]);\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div style={{ display: \"flex\" }}>\n        {Array.from(Array(10).keys()).map((i) => (\n          <div\n            style={{\n              transform: `translateX(${i * 200}px)`,\n              width: 1,\n              backgroundColor: \"red\",\n              height: 100\n            }}\n          ></div>\n        ))}\n        <div\n          style={{\n            transform: `translateX(${count}px)`,\n            width: 1,\n            backgroundColor: \"blue\",\n            height: 100,\n            left: 0,\n            position: \"absolute\"\n          }}\n        ></div>\n      </div>\n      <button onClick={() => setActive(true)}>start</button>\n      <button onClick={() => setActive(false)}>start</button>\n      {active ? \"TRUE\" : \"FALSE\"}\n    </div>\n  );\n};\n\nexport default Play;\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":2,"column":10,"nodeType":"37","messageId":"38","endLine":2,"endColumn":15},{"ruleId":"35","severity":1,"message":"39","line":3,"column":28,"nodeType":"37","messageId":"38","endLine":3,"endColumn":32},{"ruleId":"35","severity":1,"message":"40","line":76,"column":11,"nodeType":"37","messageId":"38","endLine":76,"endColumn":29},{"ruleId":"35","severity":1,"message":"41","line":100,"column":132,"nodeType":"37","messageId":"38","endLine":100,"endColumn":148},{"ruleId":"42","severity":1,"message":"43","line":39,"column":6,"nodeType":"44","endLine":39,"endColumn":14,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"@typescript-eslint/no-unused-vars","'Group' is defined but never used.","Identifier","unusedVar","'Node' is defined but never used.","'difference' is assigned a value but never used.","'keyframeGroupRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useLayoutEffect has a missing dependency: 'count'. Either include it or remove the dependency array.","ArrayExpression",["48"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [active, count]",{"range":"51","text":"52"},[968,976],"[active, count]"]